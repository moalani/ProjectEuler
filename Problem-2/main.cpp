//
//  main.cpp
//  Problem-2
//
//  Created by mohammed-alani on 5/15/20.
//  Copyright Â© 2020 mohammed-alani. All rights reserved.
/*
 
 Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

 By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 
 */

#include <iostream>
using namespace std;

unsigned  long int sumFibonacci()
{
    unsigned long int* array = new unsigned long int[4000000];
    array[0] = 1;
    array[1] = 1;
    unsigned long int sum = 0;
    unsigned long int i = 1;
    while (array[i] < 4000000)
    {
        i++;
        array[i] = array[i-1]+array[i-2];
        if (array[i]%2 == 0)
        {
            sum += array[i];
        }
    }
    
    return sum;
}


int main()

{
    cout << sumFibonacci() << "\n";
    return 0;
}
